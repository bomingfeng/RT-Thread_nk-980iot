


ARM Macro Assembler    Page 1 


    1 00000000         ;/*
    2 00000000         ; * Copyright (c) 2006-2018, RT-Thread Development Team
    3 00000000         ; *
    4 00000000         ; * SPDX-License-Identifier: Apache-2.0
    5 00000000         ; *
    6 00000000         ; * Change Logs:
    7 00000000         ; * Date           Author       Notes
    8 00000000         ; * 2011-08-14     weety    copy from mini2440
    9 00000000         ; */
   10 00000000         
   11 00000000 000000C0 
                       NOINT   EQU              0XC0        ; disable interrupt
                                                             in psr
   12 00000000         
   13 00000000                 AREA             |.TEXT|, CODE, READONLY, ALIGN=
2
   14 00000000                 ARM
   15 00000000                 REQUIRE8
   16 00000000                 PRESERVE8
   17 00000000         
   18 00000000         ;/*
   19 00000000         ; * rt_base_t rt_hw_interrupt_disable();
   20 00000000         ; */
   21 00000000         rt_hw_interrupt_disable
                               PROC
   22 00000000                 EXPORT           rt_hw_interrupt_disable
   23 00000000 E10F0000        MRS              R0, CPSR
   24 00000004 E38010C0        ORR              R1, R0, #NOINT
   25 00000008 E121F001        MSR              CPSR_C, R1
   26 0000000C E12FFF1E        BX               LR
   27 00000010                 ENDP
   28 00000010         
   29 00000010         ;/*
   30 00000010         ; * void rt_hw_interrupt_enable(rt_base_t level);
   31 00000010         ; */
   32 00000010         rt_hw_interrupt_enable
                               proc
   33 00000010                 export           rt_hw_interrupt_enable
   34 00000010 E121F000        msr              cpsr_c, r0
   35 00000014 E12FFF1E        bx               lr
   36 00000018                 endp
   37 00000018         
   38 00000018         ;/*
   39 00000018         ; * void rt_hw_context_switch(rt_uint32 from, rt_uint32 
                       to);
   40 00000018         ; * r0 --> from
   41 00000018         ; * r1 --> to
   42 00000018         ; */
   43 00000018         rt_hw_context_switch
                               proc
   44 00000018                 export           rt_hw_context_switch
   45 00000018 E92D4000        stmfd            sp!, {lr}   ; push pc (lr shoul
                                                            d be pushed in plac
                                                            e of pc)
   46 0000001C E92D5FFF        stmfd            sp!, {r0-r12, lr} ; push lr & r
                                                            egister file
   47 00000020 E10F4000        mrs              r4, cpsr
   48 00000024 E92D0010        stmfd            sp!, {r4}   ; push cpsr
   49 00000028 E580D000        str              sp, [r0]    ; store sp in preem



ARM Macro Assembler    Page 2 


                                                            pted tasks tcb
   50 0000002C E591D000        ldr              sp, [r1]    ; get new task stac
                                                            k pointer
   51 00000030 E8BD0010        ldmfd            sp!, {r4}   ; pop new task spsr
                                                            
   52 00000034 E16FF004        msr              spsr_cxsf, r4
   53 00000038 E8FDDFFF        ldmfd            sp!, {r0-r12, lr, pc}^ ; pop ne
                                                            w task r0-r12, lr &
                                                             pc
   54 0000003C                 endp
   55 0000003C         
   56 0000003C         ;/*
   57 0000003C         ; * void rt_hw_context_switch_to(rt_uint32 to);
   58 0000003C         ; * r0 --> to
   59 0000003C         ; */
   60 0000003C         rt_hw_context_switch_to
                               proc
   61 0000003C                 export           rt_hw_context_switch_to
   62 0000003C E590D000        ldr              sp, [r0]    ; get new task stac
                                                            k pointer
   63 00000040 E8BD0010        ldmfd            sp!, {r4}   ; pop new task spsr
                                                            
   64 00000044 E16FF004        msr              spsr_cxsf, r4
   65 00000048 E8FDDFFF        ldmfd            sp!, {r0-r12, lr, pc}^ ; pop ne
                                                            w task r0-r12, lr &
                                                             pc
   66 0000004C                 endp
   67 0000004C         
   68 0000004C         ;/*
   69 0000004C         ; * void rt_hw_context_switch_interrupt(rt_uint32 from, 
                       rt_uint32 to);
   70 0000004C         ; */
   71 0000004C                 import           rt_thread_switch_interrupt_flag
   72 0000004C                 import           rt_interrupt_from_thread
   73 0000004C                 import           rt_interrupt_to_thread
   74 0000004C         
   75 0000004C         rt_hw_context_switch_interrupt
                               proc
   76 0000004C                 export           rt_hw_context_switch_interrupt
   77 0000004C E59F2024        ldr              r2, =rt_thread_switch_interrupt
_flag
   78 00000050 E5923000        ldr              r3, [r2]
   79 00000054 E3530001        cmp              r3, #1
   80 00000058 0A000003        beq              _reswitch
   81 0000005C E3A03001        mov              r3, #1      ; set flag to 1
   82 00000060 E5823000        str              r3, [r2]
   83 00000064 E59F2010        ldr              r2, =rt_interrupt_from_thread ;
                                                             set rt_interrupt_f
                                                            rom_thread
   84 00000068 E5820000        str              r0, [r2]
   85 0000006C         _reswitch
   86 0000006C E59F200C        ldr              r2, =rt_interrupt_to_thread ; s
                                                            et rt_interrupt_to_
                                                            thread
   87 00000070 E5821000        str              r1, [r2]
   88 00000074 E12FFF1E        bx               lr
   89 00000078                 endp
   90 00000078         
   91 00000078                 end



ARM Macro Assembler    Page 3 


              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=ARM926EJ-S --apcs=inter
work --depend=.\build\keil4\context_rvds.d -o.\build\keil4\context_rvds.o -I"C:
\Program Files\Keil_v5\ARM\RV31\INC" -I"C:\Program Files\Keil_v5\ARM\CMSIS\Incl
ude" -I"C:\Program Files\Keil_v5\ARM\INC\Atmel\SAM9260" --predefine="__UVISION_
VERSION SETA 536" --list=.\listings\context_rvds.lst rt-thread\libcpu\arm\arm92
6\context_rvds.S



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.TEXT 00000000

Symbol: .TEXT
   Definitions
      At line 13 in file rt-thread\libcpu\arm\arm926\context_rvds.S
   Uses
      None
Comment: .TEXT unused
_reswitch 0000006C

Symbol: _reswitch
   Definitions
      At line 85 in file rt-thread\libcpu\arm\arm926\context_rvds.S
   Uses
      At line 80 in file rt-thread\libcpu\arm\arm926\context_rvds.S
Comment: _reswitch used once
rt_hw_context_switch 00000018

Symbol: rt_hw_context_switch
   Definitions
      At line 43 in file rt-thread\libcpu\arm\arm926\context_rvds.S
   Uses
      At line 44 in file rt-thread\libcpu\arm\arm926\context_rvds.S
Comment: rt_hw_context_switch used once
rt_hw_context_switch_interrupt 0000004C

Symbol: rt_hw_context_switch_interrupt
   Definitions
      At line 75 in file rt-thread\libcpu\arm\arm926\context_rvds.S
   Uses
      At line 76 in file rt-thread\libcpu\arm\arm926\context_rvds.S
Comment: rt_hw_context_switch_interrupt used once
rt_hw_context_switch_to 0000003C

Symbol: rt_hw_context_switch_to
   Definitions
      At line 60 in file rt-thread\libcpu\arm\arm926\context_rvds.S
   Uses
      At line 61 in file rt-thread\libcpu\arm\arm926\context_rvds.S
Comment: rt_hw_context_switch_to used once
rt_hw_interrupt_disable 00000000

Symbol: rt_hw_interrupt_disable
   Definitions
      At line 21 in file rt-thread\libcpu\arm\arm926\context_rvds.S
   Uses
      At line 22 in file rt-thread\libcpu\arm\arm926\context_rvds.S
Comment: rt_hw_interrupt_disable used once
rt_hw_interrupt_enable 00000010

Symbol: rt_hw_interrupt_enable
   Definitions
      At line 32 in file rt-thread\libcpu\arm\arm926\context_rvds.S
   Uses
      At line 33 in file rt-thread\libcpu\arm\arm926\context_rvds.S
Comment: rt_hw_interrupt_enable used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NOINT 000000C0

Symbol: NOINT
   Definitions
      At line 11 in file rt-thread\libcpu\arm\arm926\context_rvds.S
   Uses
      At line 24 in file rt-thread\libcpu\arm\arm926\context_rvds.S
Comment: NOINT used once
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

rt_interrupt_from_thread 00000000

Symbol: rt_interrupt_from_thread
   Definitions
      At line 72 in file rt-thread\libcpu\arm\arm926\context_rvds.S
   Uses
      At line 83 in file rt-thread\libcpu\arm\arm926\context_rvds.S
Comment: rt_interrupt_from_thread used once
rt_interrupt_to_thread 00000000

Symbol: rt_interrupt_to_thread
   Definitions
      At line 73 in file rt-thread\libcpu\arm\arm926\context_rvds.S
   Uses
      At line 86 in file rt-thread\libcpu\arm\arm926\context_rvds.S
Comment: rt_interrupt_to_thread used once
rt_thread_switch_interrupt_flag 00000000

Symbol: rt_thread_switch_interrupt_flag
   Definitions
      At line 71 in file rt-thread\libcpu\arm\arm926\context_rvds.S
   Uses
      At line 77 in file rt-thread\libcpu\arm\arm926\context_rvds.S
Comment: rt_thread_switch_interrupt_flag used once
3 symbols
344 symbols in table
