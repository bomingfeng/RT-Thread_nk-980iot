


ARM Macro Assembler    Page 1 


    1 00000000         ;/*
    2 00000000         ; * Copyright (c) 2006-2018, RT-Thread Development Team
    3 00000000         ; *
    4 00000000         ; * SPDX-License-Identifier: Apache-2.0
    5 00000000         ; *
    6 00000000         ; * Change Logs:
    7 00000000         ; * Date           Author       Notes
    8 00000000         ; * 2011-08-14     weety      first version
    9 00000000         ; * 2015-04-15     ArdaFu     Split from AT91SAM9260 BSP
                       
   10 00000000         ; * 2015-04-21     ArdaFu     Remove remap code. Using m
                       mu to map vector table
   11 00000000         ; * 2015-06-04     aozima     Align stack address to 8 b
                       yte.
   12 00000000         ; */
   13 00000000         
   14 00000000 00000200 
                       UND_STK_SIZE
                               EQU              512
   15 00000000 00001000 
                       SVC_STK_SIZE
                               EQU              4096
   16 00000000 00000200 
                       ABT_STK_SIZE
                               EQU              512
   17 00000000 00000400 
                       IRQ_STK_SIZE
                               EQU              1024
   18 00000000 00000400 
                       FIQ_STK_SIZE
                               EQU              1024
   19 00000000 00000200 
                       SYS_STK_SIZE
                               EQU              512
   20 00000000 00000200 
                       Heap_Size
                               EQU              512
   21 00000000         
   22 00000000 00000048 
                       S_FRAME_SIZE
                               EQU              (18*4)      ;72
   23 00000000 0000003C 
                       S_PC    EQU              (15*4)      ;R15
   24 00000000         
   25 00000000 00000010 
                       MODE_USR
                               EQU              0X10
   26 00000000 00000011 
                       MODE_FIQ
                               EQU              0X11
   27 00000000 00000012 
                       MODE_IRQ
                               EQU              0X12
   28 00000000 00000013 
                       MODE_SVC
                               EQU              0X13
   29 00000000 00000017 
                       MODE_ABT
                               EQU              0X17



ARM Macro Assembler    Page 2 


   30 00000000 0000001B 
                       MODE_UND
                               EQU              0X1B
   31 00000000 0000001F 
                       MODE_SYS
                               EQU              0X1F
   32 00000000 0000001F 
                       MODEMASK
                               EQU              0X1F
   33 00000000         
   34 00000000 000000C0 
                       NOINT   EQU              0xC0
   35 00000000         
   36 00000000         ;----------------------- Stack and Heap Definitions ----
                       ------------------------
   37 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   38 00000000         Stack_Mem
   39 00000000         
   40 00000000                 SPACE            UND_STK_SIZE
   41 00000200                 EXPORT           UND_STACK_START
   42 00000200         UND_STACK_START
   43 00000200         
   44 00000200                 ALIGN            8
   45 00000200                 SPACE            ABT_STK_SIZE
   46 00000400                 EXPORT           ABT_STACK_START
   47 00000400         ABT_STACK_START
   48 00000400         
   49 00000400                 ALIGN            8
   50 00000400                 SPACE            FIQ_STK_SIZE
   51 00000800                 EXPORT           FIQ_STACK_START
   52 00000800         FIQ_STACK_START
   53 00000800         
   54 00000800                 ALIGN            8
   55 00000800                 SPACE            IRQ_STK_SIZE
   56 00000C00                 EXPORT           IRQ_STACK_START
   57 00000C00         IRQ_STACK_START
   58 00000C00         
   59 00000C00                 ALIGN            8
   60 00000C00                 SPACE            SYS_STK_SIZE
   61 00000E00                 EXPORT           SYS_STACK_START
   62 00000E00         SYS_STACK_START
   63 00000E00         
   64 00000E00                 ALIGN            8
   65 00000E00                 SPACE            SVC_STK_SIZE
   66 00001E00                 EXPORT           SVC_STACK_START
   67 00001E00         SVC_STACK_START
   68 00001E00         Stack_Top
   69 00001E00         __initial_sp
   70 00001E00         
   71 00001E00         __heap_base
   72 00001E00         Heap_Mem
                               SPACE            Heap_Size
   73 00002000         __heap_limit
   74 00002000         
   75 00002000                 PRESERVE8
   76 00002000         ;--------------Jump vector table------------------------
                       ------------------------
   77 00002000                 EXPORT           Entry_Point



ARM Macro Assembler    Page 3 


   78 00002000                 AREA             RESET, CODE, READONLY
   79 00000000                 ARM
   80 00000000         Entry_Point
   81 00000000 E59FF018        LDR              PC, vector_reset
   82 00000004 E59FF018        LDR              PC, vector_undef
   83 00000008 E59FF018        LDR              PC, vector_swi
   84 0000000C E59FF018        LDR              PC, vector_pabt
   85 00000010 E59FF018        LDR              PC, vector_dabt
   86 00000014 E59FF018        LDR              PC, vector_resv
   87 00000018 E59FF018        LDR              PC, vector_irq
   88 0000001C E59FF018        LDR              PC, vector_fiq
   89 00000020         
   90 00000020         vector_reset
   91 00000020 00000000        DCD              Reset_Handler
   92 00000024         vector_undef
   93 00000024 00000000        DCD              Undef_Handler
   94 00000028         vector_swi
   95 00000028 00000000        DCD              SWI_Handler
   96 0000002C         vector_pabt
   97 0000002C 00000000        DCD              PAbt_Handler
   98 00000030         vector_dabt
   99 00000030 00000000        DCD              DAbt_Handler
  100 00000034         vector_resv
  101 00000034 00000000        DCD              Resv_Handler
  102 00000038         vector_irq
  103 00000038 00000000        DCD              IRQ_Handler
  104 0000003C         vector_fiq
  105 0000003C 00000000        DCD              FIQ_Handler
  106 00000040         
  107 00000040         ;----------------- Reset Handler -----------------------
                       ------------------------
  108 00000040                 IMPORT           rt_low_level_init
  109 00000040                 IMPORT           __main
  110 00000040                 EXPORT           Reset_Handler
  111 00000040         Reset_Handler
  112 00000040         ; set the cpu to SVC32 mode
  113 00000040 E10F0000        MRS              R0,CPSR
  114 00000044 E3C0001F        BIC              R0,R0,#MODEMASK
  115 00000048 E38000D3        ORR              R0,R0,#MODE_SVC:OR:NOINT
  116 0000004C E12FF000        MSR              CPSR_cxsf,R0
  117 00000050         
  118 00000050         ; Set CO-Processor
  119 00000050         ; little-endï¼Œdisbale I/D Cache MMU, vector table is 0x
                       00000000
  120 00000050 EE110F10        MRC              p15, 0, R0, c1, c0, 0 
                                                            ; Read CP15
  121 00000054 E59F1168        LDR              R1, =0x00003085 
                                                            ; set clear bits
  122 00000058 E1C00001        BIC              R0, R0, R1
  123 0000005C EE010F10        MCR              p15, 0, R0, c1, c0, 0 
                                                            ; Write CP15
  124 00000060         
  125 00000060         ; Call low level init function,
  126 00000060         ; disable and clear all IRQs, Init MMU, Init interrupt c
                       ontroller, etc.
  127 00000060 E59FD160        LDR              SP, =SVC_STACK_START
  128 00000064 E59F0160        LDR              R0, =rt_low_level_init
  129 00000068 E12FFF30        BLX              R0
  130 0000006C         



ARM Macro Assembler    Page 4 


  131 0000006C         Setup_Stack
  132 0000006C         ; Setup Stack for each mode
  133 0000006C E10F0000        MRS              R0, CPSR
  134 00000070 E3C0001F        BIC              R0, R0, #MODEMASK
  135 00000074         
  136 00000074 E38010DB        ORR              R1, R0, #MODE_UND:OR:NOINT
  137 00000078 E12FF001        MSR              CPSR_cxsf, R1 ; Undef mode
  138 0000007C E59FD14C        LDR              SP, =UND_STACK_START
  139 00000080         
  140 00000080 E38010D7        ORR              R1,R0,#MODE_ABT:OR:NOINT
  141 00000084 E12FF001        MSR              CPSR_cxsf,R1 ; Abort mode
  142 00000088 E59FD144        LDR              SP, =ABT_STACK_START
  143 0000008C         
  144 0000008C E38010D2        ORR              R1,R0,#MODE_IRQ:OR:NOINT
  145 00000090 E12FF001        MSR              CPSR_cxsf,R1 ; IRQ mode
  146 00000094 E59FD13C        LDR              SP, =IRQ_STACK_START
  147 00000098         
  148 00000098 E38010D1        ORR              R1,R0,#MODE_FIQ:OR:NOINT
  149 0000009C E12FF001        MSR              CPSR_cxsf,R1 ; FIQ mode
  150 000000A0 E59FD134        LDR              SP, =FIQ_STACK_START
  151 000000A4         
  152 000000A4 E38010DF        ORR              R1,R0,#MODE_SYS:OR:NOINT
  153 000000A8 E12FF001        MSR              CPSR_cxsf,R1 ; SYS/User mode
  154 000000AC E59FD12C        LDR              SP, =SYS_STACK_START
  155 000000B0         
  156 000000B0 E38010D3        ORR              R1,R0,#MODE_SVC:OR:NOINT
  157 000000B4 E12FF001        MSR              CPSR_cxsf,R1 ; SVC mode
  158 000000B8 E59FD108        LDR              SP, =SVC_STACK_START
  159 000000BC         
  160 000000BC         ; Enter the C code
  161 000000BC E59F0120        LDR              R0, =__main
  162 000000C0 E12FFF30        BLX              R0
  163 000000C4         
  164 000000C4         ;----------------- Exception Handler -------------------
                       ------------------------
  165 000000C4                 IMPORT           rt_hw_trap_udef
  166 000000C4                 IMPORT           rt_hw_trap_swi
  167 000000C4                 IMPORT           rt_hw_trap_pabt
  168 000000C4                 IMPORT           rt_hw_trap_dabt
  169 000000C4                 IMPORT           rt_hw_trap_resv
  170 000000C4                 IMPORT           rt_hw_trap_irq
  171 000000C4                 IMPORT           rt_hw_trap_fiq
  172 000000C4         
  173 000000C4                 IMPORT           rt_interrupt_enter
  174 000000C4                 IMPORT           rt_interrupt_leave
  175 000000C4                 IMPORT           rt_thread_switch_interrupt_flag
  176 000000C4                 IMPORT           rt_interrupt_from_thread
  177 000000C4                 IMPORT           rt_interrupt_to_thread
  178 000000C4         
  179 000000C4         Undef_Handler
                               PROC
  180 000000C4 E24DD048        SUB              SP, SP, #S_FRAME_SIZE
  181 000000C8 E88D1FFF        STMIA            SP, {R0 - R12} ; Calling R0-R12
                                                            
  182 000000CC E28D803C        ADD              R8, SP, #S_PC
  183 000000D0 E9086000        STMDB            R8, {SP, LR} ; Calling SP, LR
  184 000000D4 E588E000        STR              LR, [R8, #0] ; Save calling PC
  185 000000D8 E14F6000        MRS              R6, SPSR
  186 000000DC E5886004        STR              R6, [R8, #4] ; Save CPSR



ARM Macro Assembler    Page 5 


  187 000000E0 E5880008        STR              R0, [R8, #8] ; Save SPSR
  188 000000E4 E1A0000D        MOV              R0, SP
  189 000000E8 EBFFFFFE        BL               rt_hw_trap_udef
  190 000000EC                 ENDP
  191 000000EC         
  192 000000EC         SWI_Handler
                               PROC
  193 000000EC EBFFFFFE        BL               rt_hw_trap_swi
  194 000000F0                 ENDP
  195 000000F0         
  196 000000F0         PAbt_Handler
                               PROC
  197 000000F0 EBFFFFFE        BL               rt_hw_trap_pabt
  198 000000F4                 ENDP
  199 000000F4         
  200 000000F4         DAbt_Handler
                               PROC
  201 000000F4 E24DD048        SUB              SP, SP, #S_FRAME_SIZE
  202 000000F8 E88D1FFF        STMIA            SP, {R0 - R12} ; Calling R0-R12
                                                            
  203 000000FC E28D803C        ADD              R8, SP, #S_PC
  204 00000100 E9086000        STMDB            R8, {SP, LR} ; Calling SP, LR
  205 00000104 E588E000        STR              LR, [R8, #0] ; Save calling PC
  206 00000108 E14F6000        MRS              R6, SPSR
  207 0000010C E5886004        STR              R6, [R8, #4] ; Save CPSR
  208 00000110 E5880008        STR              R0, [R8, #8] ; Save SPSR
  209 00000114 E1A0000D        MOV              R0, SP
  210 00000118 EBFFFFFE        BL               rt_hw_trap_dabt
  211 0000011C                 ENDP
  212 0000011C         
  213 0000011C         Resv_Handler
                               PROC
  214 0000011C EBFFFFFE        BL               rt_hw_trap_resv
  215 00000120                 ENDP
  216 00000120         
  217 00000120         FIQ_Handler
                               PROC
  218 00000120 E92D40FF        STMFD            SP!, {R0-R7,LR}
  219 00000124 EBFFFFFE        BL               rt_hw_trap_fiq
  220 00000128 E8BD40FF        LDMFD            SP!, {R0-R7,LR}
  221 0000012C E25EF004        SUBS             PC, LR, #4
  222 00000130                 ENDP
  223 00000130         
  224 00000130         IRQ_Handler
                               PROC
  225 00000130 E92D5FFF        STMFD            SP!, {R0-R12,LR}
  226 00000134 EBFFFFFE        BL               rt_interrupt_enter
  227 00000138 EBFFFFFE        BL               rt_hw_trap_irq
  228 0000013C EBFFFFFE        BL               rt_interrupt_leave
  229 00000140         
  230 00000140         ; If rt_thread_switch_interrupt_flag set,
  231 00000140         ; jump to rt_hw_context_switch_interrupt_do and don't re
                       turn
  232 00000140 E59F00A0        LDR              R0, =rt_thread_switch_interrupt
_flag
  233 00000144 E5901000        LDR              R1, [R0]
  234 00000148 E3510001        CMP              R1, #1
  235 0000014C 0AFFFFFE        BEQ              rt_hw_context_switch_interrupt_
do



ARM Macro Assembler    Page 6 


  236 00000150         
  237 00000150 E8BD5FFF        LDMFD            SP!, {R0-R12,LR}
  238 00000154 E25EF004        SUBS             PC, LR, #4
  239 00000158                 ENDP
  240 00000158         
  241 00000158         ;------ void rt_hw_context_switch_interrupt_do(rt_base_t
                        flag) -----------------
  242 00000158         rt_hw_context_switch_interrupt_do
                               PROC
  243 00000158 E3A01000        MOV              R1,  #0     ; Clear flag
  244 0000015C E5801000        STR              R1,  [R0]   ; Save to flag vari
                                                            able
  245 00000160         
  246 00000160 E8BD5FFF        LDMFD            SP!, {R0-R12,LR} ; Reload saved
                                                             registers
  247 00000164 E90D0007        STMFD            SP, {R0-R2} ; Save R0-R2
  248 00000168 E24D100C        SUB              R1,  SP, #4*3 ; Save old task's
                                                             SP to R1
  249 0000016C E24E2004        SUB              R2,  LR, #4 ; Save old task's P
                                                            C to R2
  250 00000170         
  251 00000170 E14F0000        MRS              R0,  SPSR   ; Get CPSR of inter
                                                            rupt thread
  252 00000174         
  253 00000174 E321F0D3        MSR              CPSR_c, #MODE_SVC:OR:NOINT ; Sw
                                                            itch to SVC mode an
                                                            d no interrupt
  254 00000178         
  255 00000178 E92D0004        STMFD            SP!, {R2}   ; Push old task's P
                                                            C
  256 0000017C E92D5FF8        STMFD            SP!, {R3-R12,LR} ; Push old tas
                                                            k's LR,R12-R3
  257 00000180 E891000E        LDMFD            R1, {R1-R3}
  258 00000184 E92D000E        STMFD            SP!, {R1-R3} ; Push old task's 
                                                            R2-R0
  259 00000188 E92D0001        STMFD            SP!, {R0}   ; Push old task's C
                                                            PSR
  260 0000018C         
  261 0000018C E59F4058        LDR              R4,  =rt_interrupt_from_thread
  262 00000190 E5945000        LDR              R5,  [R4]   ; R5 = stack ptr in
                                                             old tasks's TCB
  263 00000194 E585D000        STR              SP,  [R5]   ; Store SP in preem
                                                            pted tasks's TCB
  264 00000198         
  265 00000198 E59F6050        LDR              R6,  =rt_interrupt_to_thread
  266 0000019C E5966000        LDR              R6,  [R6]   ; R6 = stack ptr in
                                                             new tasks's TCB
  267 000001A0 E596D000        LDR              SP,  [R6]   ; Get new task's st
                                                            ack pointer
  268 000001A4         
  269 000001A4 E8BD0010        LDMFD            SP!, {R4}   ; Pop new task's SP
                                                            SR
  270 000001A8 E16FF004        MSR              SPSR_cxsf, R4
  271 000001AC         
  272 000001AC E8FDDFFF        LDMFD            SP!, {R0-R12,LR,PC}^ ; pop new 
                                                            task's R0-R12,LR & 
                                                            PC SPSR to CPSR
  273 000001B0                 ENDP
  274 000001B0         



ARM Macro Assembler    Page 7 


  275 000001B0         ;*******************************************************
                       ************************
  276 000001B0         ; User Stack and Heap initialization
  277 000001B0         ;*******************************************************
                       ************************
  278 000001B0                 IF               :DEF:__MICROLIB
  285 000001B0         
  286 000001B0                 IMPORT           __use_two_region_memory
  287 000001B0                 EXPORT           __user_initial_stackheap
  288 000001B0         
  289 000001B0         __user_initial_stackheap
  290 000001B0         
  291 000001B0 E59F003C        LDR              R0, = Heap_Mem ; heap base
  292 000001B4 E59F100C        LDR              R1, = SVC_STACK_START ; stack b
                                                            ase (top-address)
  293 000001B8 E59F2038        LDR              R2, = (Heap_Mem +  Heap_Size) 
                                                            ; heap limit
  294 000001BC E59F3038        LDR              R3, = (SVC_STACK_START - SVC_ST
K_SIZE) 
                                                            ; stack limit (low-
                                                            address)
  295 000001C0 E12FFF1E        BX               LR
  296 000001C4         
  297 000001C4                 ALIGN
  298 000001C4         
  299 000001C4                 ENDIF
  300 000001C4         
  301 000001C4                 END
              00003085 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000200 
              FFFFF000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=ARM926EJ-S --apcs=inter
work --depend=.\build\keil4\start_rvds.d -o.\build\keil4\start_rvds.o -I"C:\Pro
gram Files\Keil_v5\ARM\RV31\INC" -I"C:\Program Files\Keil_v5\ARM\CMSIS\Include"
 -I"C:\Program Files\Keil_v5\ARM\INC\Atmel\SAM9260" --predefine="__UVISION_VERS
ION SETA 536" --list=.\listings\start_rvds.lst rt-thread\libcpu\arm\arm926\star
t_rvds.S



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ABT_STACK_START 00000400

Symbol: ABT_STACK_START
   Definitions
      At line 47 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 46 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 142 in file rt-thread\libcpu\arm\arm926\start_rvds.S

FIQ_STACK_START 00000800

Symbol: FIQ_STACK_START
   Definitions
      At line 52 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 51 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 150 in file rt-thread\libcpu\arm\arm926\start_rvds.S

Heap_Mem 00001E00

Symbol: Heap_Mem
   Definitions
      At line 72 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 291 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 293 in file rt-thread\libcpu\arm\arm926\start_rvds.S

IRQ_STACK_START 00000C00

Symbol: IRQ_STACK_START
   Definitions
      At line 57 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 56 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 146 in file rt-thread\libcpu\arm\arm926\start_rvds.S

STACK 00000000

Symbol: STACK
   Definitions
      At line 37 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      None
Comment: STACK unused
SVC_STACK_START 00001E00

Symbol: SVC_STACK_START
   Definitions
      At line 67 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 66 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 127 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 158 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 292 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 294 in file rt-thread\libcpu\arm\arm926\start_rvds.S

SYS_STACK_START 00000E00

Symbol: SYS_STACK_START



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 62 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 61 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 154 in file rt-thread\libcpu\arm\arm926\start_rvds.S

Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 38 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      None
Comment: Stack_Mem unused
Stack_Top 00001E00

Symbol: Stack_Top
   Definitions
      At line 68 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      None
Comment: Stack_Top unused
UND_STACK_START 00000200

Symbol: UND_STACK_START
   Definitions
      At line 42 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 41 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 138 in file rt-thread\libcpu\arm\arm926\start_rvds.S

__heap_base 00001E00

Symbol: __heap_base
   Definitions
      At line 71 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      None
Comment: __heap_base unused
__heap_limit 00002000

Symbol: __heap_limit
   Definitions
      At line 73 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      None
Comment: __heap_limit unused
__initial_sp 00001E00

Symbol: __initial_sp
   Definitions
      At line 69 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      None
Comment: __initial_sp unused
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DAbt_Handler 000000F4

Symbol: DAbt_Handler
   Definitions
      At line 200 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 99 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: DAbt_Handler used once
Entry_Point 00000000

Symbol: Entry_Point
   Definitions
      At line 80 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 77 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: Entry_Point used once
FIQ_Handler 00000120

Symbol: FIQ_Handler
   Definitions
      At line 217 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 105 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: FIQ_Handler used once
IRQ_Handler 00000130

Symbol: IRQ_Handler
   Definitions
      At line 224 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 103 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: IRQ_Handler used once
PAbt_Handler 000000F0

Symbol: PAbt_Handler
   Definitions
      At line 196 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 97 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: PAbt_Handler used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 78 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      None
Comment: RESET unused
Reset_Handler 00000040

Symbol: Reset_Handler
   Definitions
      At line 111 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 91 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 110 in file rt-thread\libcpu\arm\arm926\start_rvds.S

Resv_Handler 0000011C




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: Resv_Handler
   Definitions
      At line 213 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 101 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: Resv_Handler used once
SWI_Handler 000000EC

Symbol: SWI_Handler
   Definitions
      At line 192 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 95 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: SWI_Handler used once
Setup_Stack 0000006C

Symbol: Setup_Stack
   Definitions
      At line 131 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      None
Comment: Setup_Stack unused
Undef_Handler 000000C4

Symbol: Undef_Handler
   Definitions
      At line 179 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 93 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: Undef_Handler used once
__user_initial_stackheap 000001B0

Symbol: __user_initial_stackheap
   Definitions
      At line 289 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 287 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: __user_initial_stackheap used once
rt_hw_context_switch_interrupt_do 00000158

Symbol: rt_hw_context_switch_interrupt_do
   Definitions
      At line 242 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 235 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: rt_hw_context_switch_interrupt_do used once
vector_dabt 00000030

Symbol: vector_dabt
   Definitions
      At line 98 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 85 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: vector_dabt used once
vector_fiq 0000003C

Symbol: vector_fiq
   Definitions
      At line 104 in file rt-thread\libcpu\arm\arm926\start_rvds.S



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 88 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: vector_fiq used once
vector_irq 00000038

Symbol: vector_irq
   Definitions
      At line 102 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 87 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: vector_irq used once
vector_pabt 0000002C

Symbol: vector_pabt
   Definitions
      At line 96 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 84 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: vector_pabt used once
vector_reset 00000020

Symbol: vector_reset
   Definitions
      At line 90 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 81 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: vector_reset used once
vector_resv 00000034

Symbol: vector_resv
   Definitions
      At line 100 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 86 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: vector_resv used once
vector_swi 00000028

Symbol: vector_swi
   Definitions
      At line 94 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 83 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: vector_swi used once
vector_undef 00000024

Symbol: vector_undef
   Definitions
      At line 92 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 82 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: vector_undef used once
21 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_STK_SIZE 00000200

Symbol: ABT_STK_SIZE
   Definitions
      At line 16 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 45 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: ABT_STK_SIZE used once
FIQ_STK_SIZE 00000400

Symbol: FIQ_STK_SIZE
   Definitions
      At line 18 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 50 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: FIQ_STK_SIZE used once
Heap_Size 00000200

Symbol: Heap_Size
   Definitions
      At line 20 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 72 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 293 in file rt-thread\libcpu\arm\arm926\start_rvds.S

IRQ_STK_SIZE 00000400

Symbol: IRQ_STK_SIZE
   Definitions
      At line 17 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 55 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: IRQ_STK_SIZE used once
MODEMASK 0000001F

Symbol: MODEMASK
   Definitions
      At line 32 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 114 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 134 in file rt-thread\libcpu\arm\arm926\start_rvds.S

MODE_ABT 00000017

Symbol: MODE_ABT
   Definitions
      At line 29 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 140 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: MODE_ABT used once
MODE_FIQ 00000011

Symbol: MODE_FIQ
   Definitions
      At line 26 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 148 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: MODE_FIQ used once
MODE_IRQ 00000012



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: MODE_IRQ
   Definitions
      At line 27 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 144 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: MODE_IRQ used once
MODE_SVC 00000013

Symbol: MODE_SVC
   Definitions
      At line 28 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 115 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 156 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 253 in file rt-thread\libcpu\arm\arm926\start_rvds.S

MODE_SYS 0000001F

Symbol: MODE_SYS
   Definitions
      At line 31 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 152 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: MODE_SYS used once
MODE_UND 0000001B

Symbol: MODE_UND
   Definitions
      At line 30 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 136 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: MODE_UND used once
MODE_USR 00000010

Symbol: MODE_USR
   Definitions
      At line 25 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      None
Comment: MODE_USR unused
NOINT 000000C0

Symbol: NOINT
   Definitions
      At line 34 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 115 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 136 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 140 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 144 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 148 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 152 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 156 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 253 in file rt-thread\libcpu\arm\arm926\start_rvds.S

SVC_STK_SIZE 00001000

Symbol: SVC_STK_SIZE



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 15 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 65 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 294 in file rt-thread\libcpu\arm\arm926\start_rvds.S

SYS_STK_SIZE 00000200

Symbol: SYS_STK_SIZE
   Definitions
      At line 19 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 60 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: SYS_STK_SIZE used once
S_FRAME_SIZE 00000048

Symbol: S_FRAME_SIZE
   Definitions
      At line 22 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 180 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 201 in file rt-thread\libcpu\arm\arm926\start_rvds.S

S_PC 0000003C

Symbol: S_PC
   Definitions
      At line 23 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 182 in file rt-thread\libcpu\arm\arm926\start_rvds.S
      At line 203 in file rt-thread\libcpu\arm\arm926\start_rvds.S

UND_STK_SIZE 00000200

Symbol: UND_STK_SIZE
   Definitions
      At line 14 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 40 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: UND_STK_SIZE used once
18 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

__main 00000000

Symbol: __main
   Definitions
      At line 109 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 161 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 286 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      None
Comment: __use_two_region_memory unused
rt_hw_trap_dabt 00000000

Symbol: rt_hw_trap_dabt
   Definitions
      At line 168 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 210 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: rt_hw_trap_dabt used once
rt_hw_trap_fiq 00000000

Symbol: rt_hw_trap_fiq
   Definitions
      At line 171 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 219 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: rt_hw_trap_fiq used once
rt_hw_trap_irq 00000000

Symbol: rt_hw_trap_irq
   Definitions
      At line 170 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 227 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: rt_hw_trap_irq used once
rt_hw_trap_pabt 00000000

Symbol: rt_hw_trap_pabt
   Definitions
      At line 167 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 197 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: rt_hw_trap_pabt used once
rt_hw_trap_resv 00000000

Symbol: rt_hw_trap_resv
   Definitions
      At line 169 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 214 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: rt_hw_trap_resv used once
rt_hw_trap_swi 00000000

Symbol: rt_hw_trap_swi



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 166 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 193 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: rt_hw_trap_swi used once
rt_hw_trap_udef 00000000

Symbol: rt_hw_trap_udef
   Definitions
      At line 165 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 189 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: rt_hw_trap_udef used once
rt_interrupt_enter 00000000

Symbol: rt_interrupt_enter
   Definitions
      At line 173 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 226 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: rt_interrupt_enter used once
rt_interrupt_from_thread 00000000

Symbol: rt_interrupt_from_thread
   Definitions
      At line 176 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 261 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: rt_interrupt_from_thread used once
rt_interrupt_leave 00000000

Symbol: rt_interrupt_leave
   Definitions
      At line 174 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 228 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: rt_interrupt_leave used once
rt_interrupt_to_thread 00000000

Symbol: rt_interrupt_to_thread
   Definitions
      At line 177 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 265 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: rt_interrupt_to_thread used once
rt_low_level_init 00000000

Symbol: rt_low_level_init
   Definitions
      At line 108 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses
      At line 128 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: rt_low_level_init used once
rt_thread_switch_interrupt_flag 00000000

Symbol: rt_thread_switch_interrupt_flag
   Definitions
      At line 175 in file rt-thread\libcpu\arm\arm926\start_rvds.S
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 232 in file rt-thread\libcpu\arm\arm926\start_rvds.S
Comment: rt_thread_switch_interrupt_flag used once
15 symbols
402 symbols in table
